#!/usr/bin/env python3
import sqlite3
import pandas as pd

def check_recommendations():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö"""
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π:")
    
    try:
        conn = sqlite3.connect('MusicRecommender.db')
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ SongFeatures - —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î ML
        print("\nüéµ –¢—Ä–µ–∫–∏ –≤ SongFeatures:")
        features = pd.read_sql_query("""
            SELECT SpotifyTrackId, Artist, Genre, Popularity 
            FROM SongFeatures 
            ORDER BY Artist
        """, conn)
        
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(features)} —Ç—Ä–µ–∫—ñ–≤:")
        for _, track in features.iterrows():
            artist = track['Artist'] or 'Unknown'
            genre = track['Genre'] or 'Unknown'
            pop = track['Popularity'] or 0
            print(f"   {artist} - {genre} (Pop: {pop:.0f}) [ID: {track['SpotifyTrackId']}]")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —è–∫—ñ —Ç—Ä–µ–∫–∏ —î –≤ History –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –Ω–∞–∑–≤–∞–º–∏
        print("\nüìö –¢—Ä–µ–∫–∏ –≤ History (—Å–ø—Ä–∞–≤–∂–Ω—ñ –Ω–∞–∑–≤–∏):")
        history = pd.read_sql_query("""
            SELECT DISTINCT h.SpotifyTrackId, h.Title, h.Artist, h.Genre
            FROM History h
            WHERE h.Title IS NOT NULL AND h.Title != ''
            ORDER BY h.Artist
            LIMIT 10
        """, conn)
        
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(history)} —Ç—Ä–µ–∫—ñ–≤ –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –Ω–∞–∑–≤–∞–º–∏:")
        for _, track in history.iterrows():
            title = track['Title'] or 'Unknown'
            artist = track['Artist'] or 'Unknown'
            genre = track['Genre'] or 'Unknown'
            print(f"   {title} - {artist} ({genre}) [ID: {track['SpotifyTrackId']}]")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–µ—Ä–µ—Ç–∏–Ω
        print("\nüîó –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–µ—Ä–µ—Ç–∏–Ω –º—ñ–∂ SongFeatures —ñ History:")
        feature_ids = set(features['SpotifyTrackId'].tolist())
        history_ids = set(history['SpotifyTrackId'].tolist())
        
        intersection = feature_ids.intersection(history_ids)
        print(f"–°–ø—ñ–ª—å–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤: {len(intersection)}")
        
        if intersection:
            print("–°–ø—ñ–ª—å–Ω—ñ —Ç—Ä–µ–∫–∏:")
            for track_id in list(intersection)[:5]:
                # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Å–ø—Ä–∞–≤–∂–Ω—é –Ω–∞–∑–≤—É
                hist_track = history[history['SpotifyTrackId'] == track_id].iloc[0]
                feat_track = features[features['SpotifyTrackId'] == track_id].iloc[0]
                
                print(f"   {hist_track['Title']} - {hist_track['Artist']} (Features: {feat_track['Artist']})")
        
        conn.close()
        
        return len(intersection) > 0
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    check_recommendations() 