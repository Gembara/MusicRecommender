#!/usr/bin/env python3
import sqlite3
import random
from datetime import datetime, timedelta

def create_sasha_profile():
    """–°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –°–∞—à–∞ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º–∏ –º—É–∑–∏—á–Ω–∏–º–∏ —Å–º–∞–∫–∞–º–∏"""
    print("üéµ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –°–∞—à–∞...")
    
    try:
        conn = sqlite3.connect('MusicRecommender.db')
        cursor = conn.cursor()
        
        # –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ, —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –°–∞—à–∞
        cursor.execute("SELECT UserId FROM Users WHERE UserName = '–°–∞—à–∞'")
        existing_user = cursor.fetchone()
        
        if existing_user:
            user_id = existing_user[0]
            print(f"   ‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –°–∞—à–∞ –≤–∂–µ —ñ—Å–Ω—É—î –∑ ID: {user_id}")
        else:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –°–∞—à–∞
            cursor.execute("""
                INSERT INTO Users (UserName, Email, PreferredGenres, 
                                 AvgTempo, AvgEnergy, AvgDanceability, AvgValence,
                                 AvgAcousticness, AvgInstrumentalness, AvgLoudness, AvgSpeechiness,
                                 CreatedAt)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
            """, (
                '–°–∞—à–∞',
                'sasha@music.com',
                'Rock,Alternative,Indie',  # –°–∞—à–∞ –ª—é–±–∏—Ç—å —Ä–æ–∫ —Ç–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É
                125.0,   # –°–µ—Ä–µ–¥–Ω—ñ–π —Ç–µ–º–ø
                0.75,    # –í–∏—Å–æ–∫–∞ –µ–Ω–µ—Ä–≥—ñ—è
                0.65,    # –ü–æ–º—ñ—Ä–Ω–∞ —Ç–∞–Ω—Ü—é–≤–∞–ª—å–Ω—ñ—Å—Ç—å
                0.55,    # –°–µ—Ä–µ–¥–Ω—è –ø–æ–∑–∏—Ç–∏–≤–Ω—ñ—Å—Ç—å
                0.15,    # –ù–∏–∑—å–∫–∞ –∞–∫—É—Å—Ç–∏—á–Ω—ñ—Å—Ç—å (–ª—é–±–∏—Ç—å –µ–ª–µ–∫—Ç—Ä–∏—á–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏)
                0.05,    # –ú–∞–ª–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ—ó –º—É–∑–∏–∫–∏
                -8.0,    # –ì—É—á–Ω–∞ –º—É–∑–∏–∫–∞
                0.10,    # –ú–∞–ª–æ spoken word
                datetime.now().isoformat()
            ))
            
            user_id = cursor.lastrowid
            print(f"   ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –°–∞—à–∞ –∑ ID: {user_id}")
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤
        cursor.execute("SELECT SpotifyTrackId, Title, Artist FROM SongFeatures")
        available_tracks = cursor.fetchall()
        
        if not available_tracks:
            print("   ‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–µ–∫—ñ–≤ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
            return False
        
        # –°–∞—à–∞ –º–∞—î —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Å–º–∞–∫–∏ - –±—ñ–ª—å—à–µ –ª—é–±–∏—Ç—å —Ä–æ–∫ —Ç–∞ –µ–Ω–µ—Ä–≥—ñ–π–Ω—É –º—É–∑–∏–∫—É
        sasha_preferences = [
            # –í–∏—Å–æ–∫—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏ –¥–ª—è –µ–Ω–µ—Ä–≥—ñ–π–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤
            ('6DCZcSspjsKoFjzjrWoCdn', 4.8),  # God's Plan - Drake (—Ö–æ—á–∞ —Ü–µ –Ω–µ —Ä–æ–∫, –∞–ª–µ –µ–Ω–µ—Ä–≥—ñ–π–Ω–µ)
            ('7KXjTSCq5nL1LoYtL7XAwS', 5.0),  # HUMBLE. - Kendrick Lamar (–µ–Ω–µ—Ä–≥—ñ–π–Ω–∏–π)
            ('2xLMifQCjDGFmkHkpNLD9h', 4.9),  # Sicko Mode - Travis Scott
            ('7wGoVu4Dady5GV0Sv4UIsx', 4.7),  # Rockstar - Post Malone
            ('0sf0KYcqVmpUCOG2DIMHtH', 4.5),  # Blinding Lights - The Weeknd
            # –ú–µ–Ω—à—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏ –¥–ª—è —Å–ø–æ–∫—ñ–π–Ω—ñ—à–æ—ó –º—É–∑–∏–∫–∏
            ('0u2P5u6lvoDfwTYjAADbn4', 3.5),  # lovely - Billie Eilish (—Ç–∏—Ö—ñ—à–∞)
            ('7qEHsqek33rTcFNT9PFqLf', 3.2),  # Someone You Loved (–±–∞–ª–∞–¥–∞)
            ('6UelLqGlWMcVH1E5c4H7lY', 3.8),  # Watermelon Sugar
        ]
        
        # –û—á–∏—â—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –≤–∑–∞—î–º–æ–¥—ñ—ó –°–∞—à—ñ
        cursor.execute("DELETE FROM UserSongInteractions WHERE UserId = ?", (user_id,))
        cursor.execute("DELETE FROM History WHERE UserId = ?", (user_id,))
        
        interactions_added = 0
        history_added = 0
        
        # –î–æ–¥–∞—î–º–æ –≤–∑–∞—î–º–æ–¥—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø—Ä–µ—Ñ–µ—Ä–µ–Ω—Ü—ñ–π –°–∞—à—ñ
        for track_id, rating in sasha_preferences:
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ç–∞–∫–∏–π —Ç—Ä–µ–∫
            track_exists = any(track[0] == track_id for track in available_tracks)
            if not track_exists:
                continue
                
            # –î–æ–¥–∞—î–º–æ –≤–∑–∞—î–º–æ–¥—ñ—é
            cursor.execute("""
                INSERT OR REPLACE INTO UserSongInteractions 
                (UserId, SpotifyTrackId, InteractionType, Rating, PlayDuration, 
                 IsLiked, IsSkipped, IsRepeat, InteractionTime)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
            """, (
                user_id,
                track_id,
                'listen',
                rating,
                random.randint(120, 240),  # –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è
                1 if rating >= 4.0 else 0,  # –õ–∞–π–∫ —è–∫—â–æ —Ä–µ–π—Ç–∏–Ω–≥ –≤–∏—Å–æ–∫–∏–π
                1 if rating < 3.0 else 0,   # –°–∫—ñ–ø —è–∫—â–æ —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∏–∑—å–∫–∏–π
                1 if rating >= 4.5 else 0,  # –ü–æ–≤—Ç–æ—Ä —è–∫—â–æ –¥—É–∂–µ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è
                (datetime.now() - timedelta(days=random.randint(1, 30))).isoformat()
            ))
            interactions_added += 1
            
            # –î–æ–¥–∞—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è
            track_info = next((t for t in available_tracks if t[0] == track_id), None)
            if track_info:
                cursor.execute("""
                    INSERT INTO History (UserId, Title, Artist, SpotifyTrackId, 
                                       ImageUrl, ListenedAt)
                    VALUES (?, ?, ?, ?, ?, ?)
                """, (
                    user_id,
                    track_info[1],  # Title
                    track_info[2],  # Artist
                    track_id,
                    f"https://i.scdn.co/image/ab67616d0000b273{track_id}",
                    (datetime.now() - timedelta(days=random.randint(1, 15))).isoformat()
                ))
                history_added += 1
        
        # –î–æ–¥–∞—î–º–æ –∫—ñ–ª—å–∫–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö –≤–∑–∞—î–º–æ–¥—ñ–π –¥–ª—è —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–æ—Å—Ç—ñ
        other_tracks = [track for track in available_tracks 
                       if track[0] not in [pref[0] for pref in sasha_preferences]]
        
        for _ in range(min(5, len(other_tracks))):
            track = random.choice(other_tracks)
            rating = random.uniform(2.5, 4.2)  # –°–µ—Ä–µ–¥–Ω—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏ –¥–ª—è —ñ–Ω—à–∏—Ö —Ç—Ä–µ–∫—ñ–≤
            
            cursor.execute("""
                INSERT OR REPLACE INTO UserSongInteractions 
                (UserId, SpotifyTrackId, InteractionType, Rating, PlayDuration, 
                 IsLiked, IsSkipped, IsRepeat, InteractionTime)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
            """, (
                user_id,
                track[0],
                'listen',
                rating,
                random.randint(80, 200),
                1 if rating >= 3.8 else 0,
                1 if rating < 3.0 else 0,
                0,  # –†—ñ–¥–∫–æ –ø–æ–≤—Ç–æ—Ä—é—î —ñ–Ω—à—ñ —Ç—Ä–µ–∫–∏
                (datetime.now() - timedelta(days=random.randint(1, 45))).isoformat()
            ))
            interactions_added += 1
        
        conn.commit()
        conn.close()
        
        print(f"\nüéâ –ü—Ä–æ—Ñ—ñ–ª—å –°–∞—à—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print(f"   üë§ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user_id}")
        print(f"   üéµ –ú—É–∑–∏—á–Ω—ñ –ø—Ä–µ—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó: Rock, Alternative, Indie")
        print(f"   üìä –î–æ–¥–∞–Ω–æ {interactions_added} –≤–∑–∞—î–º–æ–¥—ñ–π")
        print(f"   üìú –î–æ–¥–∞–Ω–æ {history_added} –∑–∞–ø–∏—Å—ñ–≤ –≤ —ñ—Å—Ç–æ—Ä—ñ—é")
        print(f"   üéØ –•–∞—Ä–∞–∫—Ç–µ—Ä: –õ—é–±–∏—Ç—å –µ–Ω–µ—Ä–≥—ñ–π–Ω—É –º—É–∑–∏–∫—É, —Ä–æ–∫ —Ç–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É")
        print(f"   ‚≠ê –í–∏—Å–æ–∫—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏: HUMBLE., Sicko Mode, Rockstar")
        print(f"   üëé –ù–∏–∂—á—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏: –ë–∞–ª–∞–¥–∏ —Ç–∞ —Å–ø–æ–∫—ñ–π–Ω–∞ –º—É–∑–∏–∫–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é: {e}")
        return False

if __name__ == "__main__":
    create_sasha_profile() 