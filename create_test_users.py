#!/usr/bin/env python3
import sqlite3
import pandas as pd
import random
from datetime import datetime

def create_test_users():
    """–°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –º—É–∑–∏—á–Ω–∏–º–∏ —Å–º–∞–∫–∞–º–∏"""
    print("üë• –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...")
    
    try:
        conn = sqlite3.connect('MusicRecommender.db')
        cursor = conn.cursor()
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç—Ä–µ–∫–∏
        available_tracks = pd.read_sql_query("""
            SELECT SpotifyTrackId, Title, Artist, Genre 
            FROM SongFeatures 
            ORDER BY Popularity DESC
        """, conn)
        
        print(f"–î–æ—Å—Ç—É–ø–Ω–æ {len(available_tracks)} —Ç—Ä–µ–∫—ñ–≤")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ä—ñ–∑–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Å–º–∞–∫–∞–º–∏
        test_users = [
            {"id": 20, "name": "HipHopFan", "preferences": ["Hip-hop"], "track_range": range(5)},
            {"id": 21, "name": "PopLover", "preferences": ["Pop"], "track_range": range(3, 8)},
            {"id": 22, "name": "MixedTaste", "preferences": ["Hip-hop", "Pop"], "track_range": range(1, 10)},
            {"id": 23, "name": "DrakeStan", "preferences": ["Hip-hop"], "track_range": range(7)},
            {"id": 24, "name": "PopStar", "preferences": ["Pop"], "track_range": range(4, 12)},
        ]
        
        added_interactions = 0
        
        for user in test_users:
            user_id = user["id"]
            user_name = user["name"]
            preferences = user["preferences"]
            
            print(f"\nüéµ –°—Ç–≤–æ—Ä—é—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_name} (ID: {user_id})")
            
            # –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—Ä–µ–∫–∏ –∑–∞ –∂–∞–Ω—Ä–∞–º–∏
            if preferences:
                user_tracks = available_tracks[available_tracks['Genre'].isin(preferences)]
            else:
                user_tracks = available_tracks
            
            # –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ —Ç—Ä–µ–∫–∏ –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            selected_tracks = user_tracks.iloc[list(user["track_range"])[:min(len(user_tracks), 8)]]
            
            for _, track in selected_tracks.iterrows():
                # –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∂–∞–Ω—Ä—É
                if track['Genre'] in preferences:
                    rating = random.uniform(4.0, 5.0)  # –í–∏—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –¥–ª—è —É–ª—é–±–ª–µ–Ω–∏—Ö –∂–∞–Ω—Ä—ñ–≤
                else:
                    rating = random.uniform(2.5, 4.5)  # –ù–∏–∂—á–∏–π –¥–ª—è —ñ–Ω—à–∏—Ö
                
                # –î–æ–¥–∞—î–º–æ –≤–∑–∞—î–º–æ–¥—ñ—é
                cursor.execute("""
                    INSERT OR REPLACE INTO UserSongInteractions 
                    (UserId, SpotifyTrackId, InteractionType, Rating, PlayDuration, IsLiked, IsSkipped, IsRepeat, InteractionTime)
                    VALUES (?, ?, 'listen', ?, ?, ?, 0, 0, datetime('now'))
                """, (
                    user_id, 
                    track['SpotifyTrackId'], 
                    rating,
                    random.randint(120, 300),  # –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è
                    1 if rating > 4.0 else 0   # –õ–∞–π–∫ —è–∫—â–æ –≤–∏—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥
                ))
                
                added_interactions += 1
                print(f"   ‚úÖ {track['Title']} - {track['Artist']} (—Ä–µ–π—Ç–∏–Ω–≥: {rating:.1f})")
        
        conn.commit()
        conn.close()
        
        print(f"\nüéâ –°—Ç–≤–æ—Ä–µ–Ω–æ {len(test_users)} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ {added_interactions} –≤–∑–∞—î–º–æ–¥—ñ—è–º–∏!")
        print("–¢–µ–ø–µ—Ä Collaborative Filtering –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∫—Ä–∞—â–µ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    create_test_users() 