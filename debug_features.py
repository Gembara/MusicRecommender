#!/usr/bin/env python3
import sqlite3
import pandas as pd

def debug_song_features():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —Ñ—ñ—á—ñ –¥–ª—è —É–ª—é–±–ª–µ–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤"""
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—ñ—á–µ–π –ø—ñ—Å–µ–Ω—å –¥–ª—è ML:")
    
    try:
        conn = sqlite3.connect('MusicRecommender.db')
        
        # –£–ª—é–±–ª–µ–Ω—ñ —Ç—Ä–µ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 11
        print("\n‚ù§Ô∏è –£–ª—é–±–ª–µ–Ω—ñ —Ç—Ä–µ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 11:")
        favorites = pd.read_sql_query("""
            SELECT f.SpotifyTrackId
            FROM Favorites f 
            WHERE f.UserId = 11
        """, conn)
        
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(favorites)} —É–ª—é–±–ª–µ–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤")
        for _, fav in favorites.head(5).iterrows():
            track_id = fav['SpotifyTrackId']
            print(f"   Track ID: {track_id}")
        
        # –Ü—Å—Ç–æ—Ä—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 11  
        print("\nüìö –Ü—Å—Ç–æ—Ä—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 11:")
        history = pd.read_sql_query("""
            SELECT h.SpotifyTrackId, h.Title, h.Artist
            FROM History h 
            WHERE h.UserId = 11
        """, conn)
        
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(history)} –∑–∞–ø–∏—Å—ñ–≤ –≤ —ñ—Å—Ç–æ—Ä—ñ—ó")
        for _, hist in history.head(5).iterrows():
            print(f"   {hist['Title']} - {hist['Artist']} (ID: {hist['SpotifyTrackId']})")
        
        # –í—Å—ñ —Ñ—ñ—á—ñ –≤ –±–∞–∑—ñ
        print("\nüéµ –§—ñ—á—ñ –ø—ñ—Å–µ–Ω—å –≤ SongFeatures:")
        features = pd.read_sql_query("SELECT SpotifyTrackId, Artist FROM SongFeatures", conn)
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(features)} —Ñ—ñ—á–µ–π")
        for _, feat in features.head(5).iterrows():
            print(f"   {feat['Artist']} (ID: {feat['SpotifyTrackId']})")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–µ—Ä–µ—Ç–∏–Ω
        print("\nüîó –ü–µ—Ä–µ—Ç–∏–Ω —É–ª—é–±–ª–µ–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤ –∑ —Ñ—ñ—á–∞–º–∏:")
        fav_ids = set(favorites['SpotifyTrackId'].tolist())
        feat_ids = set(features['SpotifyTrackId'].tolist())
        
        intersection = fav_ids.intersection(feat_ids)
        print(f"–°–ø—ñ–ª—å–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤: {len(intersection)} –∑ {len(fav_ids)} —É–ª—é–±–ª–µ–Ω–∏—Ö")
        
        if intersection:
            print("–°–ø—ñ–ª—å–Ω—ñ —Ç—Ä–µ–∫–∏:")
            for track_id in list(intersection)[:3]:
                print(f"   Track ID: {track_id}")
        else:
            print("‚ùå –ù–ï–ú–ê–Ñ –°–ü–Ü–õ–¨–ù–ò–• –¢–†–ï–ö–Ü–í! –¶–µ –ø—Ä–∏—á–∏–Ω–∞ 0 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π")
            
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –∑ —Ñ—ñ—á–∞–º–∏
        print("\nüîó –ü–µ—Ä–µ—Ç–∏–Ω —ñ—Å—Ç–æ—Ä—ñ—ó –∑ —Ñ—ñ—á–∞–º–∏:")
        hist_ids = set(history['SpotifyTrackId'].tolist())
        hist_intersection = hist_ids.intersection(feat_ids)
        print(f"–°–ø—ñ–ª—å–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤ –∑ —ñ—Å—Ç–æ—Ä—ñ—ó: {len(hist_intersection)} –∑ {len(hist_ids)}")
        
        conn.close()
        
        if len(intersection) == 0 and len(hist_intersection) == 0:
            print("\nüí° –†–Ü–®–ï–ù–ù–Ø:")
            print("–ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ —Ñ—ñ—á—ñ –¥–ª—è –≤–∞—à–∏—Ö —É–ª—é–±–ª–µ–Ω–∏—Ö/–ø—Ä–æ—Å–ª—É—Ö–∞–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤")
            print("–ê–±–æ –¥–æ–¥–∞—Ç–∏ —Ç—Ä–µ–∫–∏ –∑ —ñ—Å–Ω—É—é—á–∏—Ö —Ñ—ñ—á–µ–π –¥–æ —É–ª—é–±–ª–µ–Ω–∏—Ö")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    debug_song_features() 