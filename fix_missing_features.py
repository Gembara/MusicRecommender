#!/usr/bin/env python3
import sqlite3
import pandas as pd
import random

def add_features_for_user_tracks():
    """–î–æ–¥–∞—î–º–æ —Ñ—ñ—á—ñ –¥–ª—è —Å–ø—Ä–∞–≤–∂–Ω—ñ—Ö —Ç—Ä–µ–∫—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    print("üîß –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—ñ—á–µ–π –¥–ª—è –≤–∞—à–∏—Ö —Ç—Ä–µ–∫—ñ–≤...")
    
    try:
        conn = sqlite3.connect('MusicRecommender.db')
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Ç—Ä–µ–∫–∏ –∑ Favorites —Ç–∞ History
        print("üì° –ó–±–∏—Ä–∞—é —Ç—Ä–µ–∫–∏ –∑ Favorites —Ç–∞ History...")
        
        unique_tracks = pd.read_sql_query("""
            SELECT DISTINCT SpotifyTrackId, Title, Artist, Genre
            FROM (
                SELECT h.SpotifyTrackId, h.Title, h.Artist, h.Genre
                FROM History h
                WHERE h.UserId IN (1, 11)
                
                UNION
                
                SELECT h.SpotifyTrackId, h.Title, h.Artist, h.Genre  
                FROM History h
                JOIN Favorites f ON h.SpotifyTrackId = f.SpotifyTrackId
                WHERE f.UserId IN (1, 11)
            )
        """, conn)
        
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(unique_tracks)} —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Ç—Ä–µ–∫—ñ–≤")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —è–∫—ñ —Ç—Ä–µ–∫–∏ –≤–∂–µ –º–∞—é—Ç—å —Ñ—ñ—á—ñ
        existing_features = pd.read_sql_query("""
            SELECT SpotifyTrackId FROM SongFeatures
        """, conn)
        
        existing_ids = set(existing_features['SpotifyTrackId'].tolist())
        new_tracks = unique_tracks[~unique_tracks['SpotifyTrackId'].isin(existing_ids)]
        
        print(f"–¢—Ä–µ–∫—ñ–≤ –±–µ–∑ —Ñ—ñ—á–µ–π: {len(new_tracks)}")
        
        if len(new_tracks) == 0:
            print("‚úÖ –í—Å—ñ —Ç—Ä–µ–∫–∏ –≤–∂–µ –º–∞—é—Ç—å —Ñ—ñ—á—ñ")
            conn.close()
            return
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ —Ñ—ñ—á—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç—Ä–µ–∫—É
        print("üéµ –ì–µ–Ω–µ—Ä—É—é —Ñ—ñ—á—ñ –¥–ª—è —Ç—Ä–µ–∫—ñ–≤...")
        
        for _, track in new_tracks.iterrows():
            track_id = track['SpotifyTrackId']
            title = track['Title'] or 'Unknown'
            artist = track['Artist'] or 'Unknown'
            genre = track['Genre'] or 'Pop'
            
            # –ì–µ–Ω–µ—Ä—É—î–º–æ —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ —Ñ—ñ—á—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∂–∞–Ω—Ä—É
            if genre.lower() in ['hip-hop', 'rap']:
                # Hip-hop —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                features = {
                    'Danceability': random.uniform(0.7, 0.9),
                    'Energy': random.uniform(0.6, 0.9),
                    'Valence': random.uniform(0.4, 0.8),
                    'Tempo': random.uniform(70, 140),
                    'Acousticness': random.uniform(0.0, 0.3),
                    'Instrumentalness': random.uniform(0.0, 0.1),
                    'Speechiness': random.uniform(0.1, 0.6),
                    'Loudness': random.uniform(-8, -3),
                    'Popularity': random.uniform(60, 95)
                }
            elif genre.lower() in ['pop', 'electronic']:
                # Pop/Electronic —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                features = {
                    'Danceability': random.uniform(0.5, 0.9),
                    'Energy': random.uniform(0.5, 0.8),
                    'Valence': random.uniform(0.4, 0.9),
                    'Tempo': random.uniform(90, 130),
                    'Acousticness': random.uniform(0.0, 0.4),
                    'Instrumentalness': random.uniform(0.0, 0.2),
                    'Speechiness': random.uniform(0.03, 0.3),
                    'Loudness': random.uniform(-10, -4),
                    'Popularity': random.uniform(50, 90)
                }
            else:
                # –ó–∞–≥–∞–ª—å–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                features = {
                    'Danceability': random.uniform(0.3, 0.8),
                    'Energy': random.uniform(0.3, 0.8),
                    'Valence': random.uniform(0.2, 0.8),
                    'Tempo': random.uniform(60, 150),
                    'Acousticness': random.uniform(0.0, 0.7),
                    'Instrumentalness': random.uniform(0.0, 0.3),
                    'Speechiness': random.uniform(0.03, 0.4),
                    'Loudness': random.uniform(-15, -3),
                    'Popularity': random.uniform(30, 80)
                }
            
            # –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ—ñ—á—ñ
            features.update({
                'Key': random.randint(0, 11),
                'Mode': random.randint(0, 1),
                'TimeSignature': random.choice([3, 4, 5]),
                'DurationMs': random.randint(180000, 300000)  # 3-5 —Ö–≤–∏–ª–∏–Ω
            })
            
            # –í—Å—Ç–∞–≤–ª—è—î–º–æ –≤ –±–∞–∑—É
            cursor = conn.cursor()
            cursor.execute("""
                INSERT INTO SongFeatures (
                    SpotifyTrackId, Danceability, Energy, Valence, Tempo,
                    Acousticness, Instrumentalness, Speechiness, Loudness,
                    Popularity, Key, Mode, TimeSignature, DurationMs, Genre, Artist
                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
            """, (
                track_id, features['Danceability'], features['Energy'], 
                features['Valence'], features['Tempo'], features['Acousticness'],
                features['Instrumentalness'], features['Speechiness'], 
                features['Loudness'], features['Popularity'], features['Key'],
                features['Mode'], features['TimeSignature'], features['DurationMs'],
                genre, artist
            ))
            
            print(f"   ‚úÖ {title} - {artist}")
        
        conn.commit()
        conn.close()
        
        print(f"\n‚úÖ –î–æ–¥–∞–Ω–æ —Ñ—ñ—á—ñ –¥–ª—è {len(new_tracks)} —Ç—Ä–µ–∫—ñ–≤!")
        print("üöÄ –¢–µ–ø–µ—Ä ML –∞–ª–≥–æ—Ä–∏—Ç–º–∏ –ø–æ–≤–∏–Ω–Ω—ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏!")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    add_features_for_user_tracks() 