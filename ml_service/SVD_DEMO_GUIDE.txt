🎵 Як побачити роботу SVD алгоритму в Music Recommender
=========================================================

📍 SVD алгоритм знаходиться в проекті в наступних місцях:

1. 🔧 ОСНОВНА РЕАЛІЗАЦІЯ:
   📁 ml_service/ml_models.py
   - Клас MusicRecommenderML
   - Метод _train_svd_model() - тренування SVD
   - Метод get_svd_recommendations() - генерація рекомендацій
   - Використовує TruncatedSVD з sklearn

2. 🌐 API ENDPOINT:
   📁 ml_service/main.py  
   - POST /recommend з model_type="svd"
   - Інтеграція в гібридні рекомендації

3. 🧪 ДЕМОНСТРАЦІЙНІ ФАЙЛИ:
   📁 ml_service/simple_svd_demo.py - проста демонстрація принципів
   📁 ml_service/test_svd_demo.py - повна демонстрація з sklearn
   📁 ml_service/run_svd_demo.bat - батч файл для запуску

🚀 СПОСОБИ ПОБАЧИТИ РОБОТУ SVD:

╔══════════════════════════════════════════════════════════════╗
║                    СПОСІБ 1: Проста демонстрація            ║
╚══════════════════════════════════════════════════════════════╝

1. Відкрийте Command Prompt або PowerShell
2. Перейдіть в папку: cd "ml_service"
3. Запустіть: run_svd_demo.bat
4. Або: python simple_svd_demo.py

Що побачите:
✅ User-Item матрицю (користувачі × треки)
✅ Латентні фактори (жанри, активність)
✅ Процес генерації рекомендацій
✅ Схожість треків в латентному просторі

╔══════════════════════════════════════════════════════════════╗
║                 СПОСІБ 2: Через веб-додаток                 ║
╚══════════════════════════════════════════════════════════════╝

1. Запустіть основний проект: dotnet run --urls "http://localhost:5000"
2. Відкрийте браузер: http://localhost:5000
3. Зареєструйтеся та додайте кілька треків до улюбленого
4. SVD алгоритм працює в фоні через C# рекомендації

╔══════════════════════════════════════════════════════════════╗
║              СПОСІБ 3: Через ML API (якщо працює)           ║
╚══════════════════════════════════════════════════════════════╝

1. Запустіть ML сервіс: python main.py
2. Тренування: POST http://localhost:8000/train
3. SVD рекомендації: POST http://localhost:8000/recommend
   {
     "user_id": 1,
     "model_type": "svd",
     "limit": 10
   }

🎯 ЩО РОБИТЬ SVD АЛГОРИТМ:

1. 📊 МАТРИЧНА ФАКТОРИЗАЦІЯ:
   • Розкладає user-item матрицю на латентні фактори
   • Знаходить приховані закономірності в смаках
   • Зменшує розмірність з тисяч треків до ~50 факторів

2. 🔍 ЛАТЕНТНІ ФАКТОРИ:
   • Фактор 1: жанрові переваги (поп vs рок vs джаз)
   • Фактор 2: енергійність (спокійна vs енергійна музика)
   • Фактор 3: сучасність (класика vs сучасне)
   • Фактор N: інші приховані характеристики

3. 🎵 ГЕНЕРАЦІЯ РЕКОМЕНДАЦІЙ:
   • Створює профіль користувача в латентному просторі
   • Порівнює з усіма треками через косинусну схожість
   • Рекомендує найсхожіші треки

4. 💫 ПЕРЕВАГИ SVD:
   • Працює з розрідженими даними (багато пропусків)
   • Виявляє неочевидні зв'язки між треками
   • Масштабується на великі дані
   • Знаходить групи користувачів з подібними смаками

📈 ПРИКЛАД РОБОТИ:

Користувач любить:
🎵 The Weeknd - Blinding Lights (поп, енергійно)
🎵 Dua Lipa - Levitating (поп, танцювально)

SVD знаходить латентні фактори:
🔸 Фактор 1: +0.8 (сучасний поп)
🔸 Фактор 2: +0.6 (енергійність)
🔸 Фактор 3: -0.2 (не класика)

Рекомендує треки з схожими факторами:
🎯 Ariana Grande - positions
🎯 Justin Bieber - Peaches  
🎯 Olivia Rodrigo - good 4 u

🔧 НАЛАШТУВАННЯ:

У файлі ml_models.py можна змінити:
• n_components - кількість латентних факторів (зараз 50)
• random_state - для повторюваності результатів
• n_iter - кількість ітерацій тренування

🌟 ГІБРИДНИЙ ПІДХІД:

SVD працює разом з іншими алгоритмами:
• 40% Content-Based (аудіо фічі)
• 30% Collaborative Filtering (схожі користувачі)  
• 30% SVD (латентні фактори)

Це дає найкращі рекомендації!

📞 ПОТРІБНА ДОПОМОГА?

Якщо SVD не працює:
1. Перевірте чи встановлені залежності: pip install -r requirements.txt
2. Переконайтеся що є дані в базі: History, Favorites таблиці
3. Запустіть спочатку тренування: POST /train
4. Перевірте логи на помилки

✨ SVD - це потужний алгоритм для музичних рекомендацій!
   Він знаходить приховані закономірності в ваших смаках
   і рекомендує музику, яка вам сподобається! 🎶 