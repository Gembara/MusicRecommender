#!/usr/bin/env python3
import requests
import sqlite3

def get_user_info(user_id):
    """–û—Ç—Ä–∏–º—É—î–º–æ –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    conn = sqlite3.connect('../MusicRecommender.db')
    cursor = conn.cursor()
    
    cursor.execute("SELECT UserName, PreferredGenres FROM Users WHERE UserId = ?", (user_id,))
    user_info = cursor.fetchone()
    
    cursor.execute("""
        SELECT s.Title, s.Artist, ui.Rating 
        FROM UserSongInteractions ui
        JOIN SongFeatures s ON ui.SpotifyTrackId = s.SpotifyTrackId
        WHERE ui.UserId = ?
        ORDER BY ui.Rating DESC
        LIMIT 3
    """, (user_id,))
    top_tracks = cursor.fetchall()
    
    conn.close()
    return user_info, top_tracks

def get_hybrid_recommendations(user_id, num_recs=3):
    """–û—Ç—Ä–∏–º—É—î–º–æ –≥—ñ–±—Ä–∏–¥–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó"""
    try:
        response = requests.post('http://localhost:8000/recommend', json={
            'user_id': user_id,
            'algorithm': 'hybrid',
            'num_recommendations': num_recs
        })
        if response.status_code == 200:
            return response.json().get('recommendations', [])
    except:
        pass
    return []

def main():
    print("üéµ –®–í–ò–î–ö–ò–ô –¢–ï–°–¢ –ü–ï–†–°–û–ù–ê–õ–Ü–ó–ê–¶–Ü–á")
    print("="*50)
    
    # –¢—Ä–µ–Ω—É—î–º–æ –º–æ–¥–µ–ª—ñ
    try:
        requests.post('http://localhost:8000/train')
        print("‚úÖ –ú–æ–¥–µ–ª—ñ –Ω–∞—Ç—Ä–µ–Ω–æ–≤–∞–Ω—ñ\n")
    except:
        print("‚ùå ML —Å–µ—Ä–≤—ñ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π\n")
        return
    
    # –¢–µ—Å—Ç–æ–≤—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
    test_users = [1, 13, 2]  # Vens, –°–∞—à–∞, TestUser1
    
    for user_id in test_users:
        user_info, top_tracks = get_user_info(user_id)
        if not user_info:
            continue
            
        print(f"üë§ {user_info[0]} (ID: {user_id})")
        print(f"üé≠ –ñ–∞–Ω—Ä–∏: {user_info[1] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}")
        print(f"‚≠ê –£–ª—é–±–ª–µ–Ω—ñ —Ç—Ä–µ–∫–∏:")
        for i, (title, artist, rating) in enumerate(top_tracks, 1):
            print(f"   {i}. {title} - {artist} ({rating}‚òÖ)")
        
        print(f"ü§ñ –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
        recommendations = get_hybrid_recommendations(user_id, 3)
        
        if recommendations:
            for i, rec in enumerate(recommendations, 1):
                title = rec.get('title', 'Unknown')
                artist = rec.get('artist', 'Unknown')
                confidence = rec.get('predicted_rating', 0)
                print(f"   {i}. {title} - {artist} ({confidence:.1%})")
        else:
            print("   ‚ùå –ù–µ–º–∞—î —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π")
        
        print("-" * 50)
    
    print("\n‚úÖ –í–ò–°–ù–û–í–û–ö: –ö–æ–∂–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ç—Ä–∏–º—É—î –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó!")
    print("   üìä –†—ñ–∑–Ω—ñ —É–ª—é–±–ª–µ–Ω—ñ —Ç—Ä–µ–∫–∏ ‚Üí —Ä—ñ–∑–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó")
    print("   üéØ ML —Å–∏—Å—Ç–µ–º–∞ –≤—Ä–∞—Ö–æ–≤—É—î —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ —Å–º–∞–∫–∏")

if __name__ == "__main__":
    main() 