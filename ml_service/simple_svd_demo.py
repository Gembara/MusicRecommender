#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è SVD –ø—Ä–∏–Ω—Ü–∏–ø—ñ–≤ –±–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫
"""

import math

def print_matrix(matrix, title=""):
    """–í–∏–≤–æ–¥–∏—Ç—å –º–∞—Ç—Ä–∏—Ü—é —É –∑—Ä—É—á–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ"""
    if title:
        print(f"\n{title}:")
    for row in matrix:
        print("  " + " ".join(f"{x:6.2f}" for x in row))

def svd_demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –ø—Ä–∏–Ω—Ü–∏–ø—ñ–≤ SVD"""
    print("üéµ SVD –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–ª—è Music Recommender")
    print("=" * 50)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω—É user-item –º–∞—Ç—Ä–∏—Ü—é
    print("\nüìä 1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è user-item –º–∞—Ç—Ä–∏—Ü—ñ")
    print("   –†—è–¥–∫–∏ = –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, –ö–æ–ª–æ–Ω–∫–∏ = –¢—Ä–µ–∫–∏")
    print("   –ó–Ω–∞—á–µ–Ω–Ω—è = –†–µ–π—Ç–∏–Ω–≥–∏ (1-5)")
    
    # 5 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, 6 —Ç—Ä–µ–∫—ñ–≤
    user_item_matrix = [
        [5, 1, 0, 4, 0, 1],  # User 1: –ª—é–±–∏—Ç—å –ø–æ–ø (—Ç—Ä–µ–∫–∏ 1,4)
        [0, 5, 4, 0, 1, 5],  # User 2: –ª—é–±–∏—Ç—å —Ä–æ–∫ (—Ç—Ä–µ–∫–∏ 2,3,6)
        [4, 0, 0, 5, 0, 0],  # User 3: –ª—é–±–∏—Ç—å –ø–æ–ø (—Ç—Ä–µ–∫–∏ 1,4)
        [0, 4, 5, 0, 5, 4],  # User 4: –ª—é–±–∏—Ç—å —Ä–æ–∫ (—Ç—Ä–µ–∫–∏ 2,3,5,6)
        [5, 1, 0, 4, 0, 2],  # User 5: –ª—é–±–∏—Ç—å –ø–æ–ø (—Ç—Ä–µ–∫–∏ 1,4)
    ]
    
    tracks = ["Pop1", "Rock1", "Rock2", "Pop2", "Rock3", "Rock4"]
    users = ["User1", "User2", "User3", "User4", "User5"]
    
    print_matrix(user_item_matrix, "User-Item –º–∞—Ç—Ä–∏—Ü—è")
    print(f"   –¢—Ä–µ–∫–∏: {tracks}")
    print(f"   –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ: {users}")
    
    print("\nüîç 2. –ê–Ω–∞–ª—ñ–∑ –ø–∞—Ç–µ—Ä–Ω—ñ–≤")
    print("   üìà –ì—Ä—É–ø–∞ 1 (Pop lovers): User1, User3, User5 - –ª—é–±–ª—è—Ç—å Pop1, Pop2")
    print("   üé∏ –ì—Ä—É–ø–∞ 2 (Rock lovers): User2, User4 - –ª—é–±–ª—è—Ç—å Rock1, Rock2, Rock3, Rock4")
    
    print("\nüîÑ 3. SVD –ø—Ä–∏–Ω—Ü–∏–ø —Ä–æ–±–æ—Ç–∏")
    print("   SVD —Ä–æ–∑–∫–ª–∞–¥–∞—î –º–∞—Ç—Ä–∏—Ü—é A = U √ó Œ£ √ó V^T")
    print("   ‚Ä¢ U: –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —É –ª–∞—Ç–µ–Ω—Ç–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ")
    print("   ‚Ä¢ Œ£: –≤–∞–∂–ª–∏–≤—ñ—Å—Ç—å –ª–∞—Ç–µ–Ω—Ç–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä—ñ–≤")
    print("   ‚Ä¢ V^T: —Ç—Ä–µ–∫–∏ —É –ª–∞—Ç–µ–Ω—Ç–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ")
    
    print("\nüéØ 4. –õ–∞—Ç–µ–Ω—Ç–Ω—ñ —Ñ–∞–∫—Ç–æ—Ä–∏ (–∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–æ)")
    print("   –§–∞–∫—Ç–æ—Ä 1: 'Pop vs Rock' (-1 = –ø–æ–ø, +1 = —Ä–æ–∫)")
    print("   –§–∞–∫—Ç–æ—Ä 2: '–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å' (—Å–∫—ñ–ª—å–∫–∏ –º—É–∑–∏–∫–∏ —Å–ª—É—Ö–∞—î)")
    
    # –°–∏–º—É–ª—è—Ü—ñ—è –ª–∞—Ç–µ–Ω—Ç–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä—ñ–≤
    user_factors = [
        [-0.8, 0.6],   # User1: –ª—é–±–∏—Ç—å –ø–æ–ø, —Å–µ—Ä–µ–¥–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
        [0.9, 0.8],    # User2: –ª—é–±–∏—Ç—å —Ä–æ–∫, –≤–∏—Å–æ–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
        [-0.7, 0.4],   # User3: –ª—é–±–∏—Ç—å –ø–æ–ø, –Ω–∏–∑—å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
        [0.8, 0.9],    # User4: –ª—é–±–∏—Ç—å —Ä–æ–∫, –≤–∏—Å–æ–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
        [-0.6, 0.5],   # User5: –ª—é–±–∏—Ç—å –ø–æ–ø, —Å–µ—Ä–µ–¥–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
    ]
    
    item_factors = [
        [-0.9, 0.3],   # Pop1: —á–∏—Å—Ç–æ –ø–æ–ø
        [0.8, 0.7],    # Rock1: —á–∏—Å—Ç–æ —Ä–æ–∫
        [0.7, 0.6],    # Rock2: —Ä–æ–∫
        [-0.8, 0.4],   # Pop2: –ø–æ–ø
        [0.9, 0.8],    # Rock3: —Ä–æ–∫
        [0.6, 0.5],    # Rock4: —Ä–æ–∫
    ]
    
    print_matrix(user_factors, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —É –ª–∞—Ç–µ–Ω—Ç–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ (U)")
    print_matrix(item_factors, "–¢—Ä–µ–∫–∏ —É –ª–∞—Ç–µ–Ω—Ç–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ (V)")
    
    print("\nüéµ 5. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –¥–ª—è User1")
    user1_factors = user_factors[0]  # [-0.8, 0.6]
    print(f"   –ü—Ä–æ—Ñ—ñ–ª—å User1: {user1_factors} (–ª—é–±–∏—Ç—å –ø–æ–ø, —Å–µ—Ä–µ–¥–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å)")
    
    print("\n   –°—Ö–æ–∂—ñ—Å—Ç—å –∑ —Ç—Ä–µ–∫–∞–º–∏:")
    similarities = []
    for i, track_factors in enumerate(item_factors):
        # –û–±—á–∏—Å–ª—é—î–º–æ –∫–æ—Å–∏–Ω—É—Å–Ω—É —Å—Ö–æ–∂—ñ—Å—Ç—å
        dot_product = sum(a * b for a, b in zip(user1_factors, track_factors))
        magnitude_user = math.sqrt(sum(x * x for x in user1_factors))
        magnitude_track = math.sqrt(sum(x * x for x in track_factors))
        similarity = dot_product / (magnitude_user * magnitude_track)
        similarities.append((tracks[i], similarity))
        
        print(f"   {tracks[i]}: {similarity:.3f}")
    
    # –°–æ—Ä—Ç—É—î–º–æ –∑–∞ —Å—Ö–æ–∂—ñ—Å—Ç—é
    similarities.sort(key=lambda x: x[1], reverse=True)
    
    print("\nüèÜ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è User1 (–∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º —Å—Ö–æ–∂–æ—Å—Ç—ñ):")
    for i, (track, sim) in enumerate(similarities[:3]):
        print(f"   {i+1}. {track} (—Å—Ö–æ–∂—ñ—Å—Ç—å: {sim:.3f})")
    
    print("\n‚úÖ 6. –í–∏—Å–Ω–æ–≤–∫–∏ SVD:")
    print("   ‚Ä¢ SVD –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–∏—Ö–æ–≤–∞–Ω—ñ —Ñ–∞–∫—Ç–æ—Ä–∏ (–∂–∞–Ω—Ä–∏, –Ω–∞—Å—Ç—Ä—ñ–π, —Ç–æ—â–æ)")
    print("   ‚Ä¢ –ó–º–µ–Ω—à—É—î —Ä–æ–∑–º—ñ—Ä–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö (—Ç–∏—Å—è—á—ñ —Ç—Ä–µ–∫—ñ–≤ ‚Üí –∫—ñ–ª—å–∫–∞ —Ñ–∞–∫—Ç–æ—Ä—ñ–≤)")
    print("   ‚Ä¢ –î–æ–∑–≤–æ–ª—è—î —Ä–µ–∫–æ–º–µ–Ω–¥—É–≤–∞—Ç–∏ —Ç—Ä–µ–∫–∏ —á–µ—Ä–µ–∑ –ª–∞—Ç–µ–Ω—Ç–Ω—É —Å—Ö–æ–∂—ñ—Å—Ç—å")
    print("   ‚Ä¢ –ü—Ä–∞—Ü—é—î –Ω–∞–≤—ñ—Ç—å –∑ —Ä–æ–∑—Ä—ñ–¥–∂–µ–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ (–±–∞–≥–∞—Ç–æ –Ω—É–ª—ñ–≤)")
    print("   ‚Ä¢ –í–∏—è–≤–ª—è—î –≥—Ä—É–ø–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–æ–¥—ñ–±–Ω–∏–º–∏ —Å–º–∞–∫–∞–º–∏")

if __name__ == "__main__":
    svd_demo() 