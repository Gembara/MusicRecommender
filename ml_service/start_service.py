#!/usr/bin/env python3
"""
üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫—É Music Recommender ML Service
"""

import subprocess
import sys
import os
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def check_python():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–µ—Ä—Å—ñ—ó Python"""
    if sys.version_info < (3, 8):
        logger.error("‚ùå –ü–æ—Ç—Ä—ñ–±–µ–Ω Python 3.8 –∞–±–æ –Ω–æ–≤—ñ—à–∏–π")
        sys.exit(1)
    logger.info(f"‚úÖ Python {sys.version}")

def install_requirements():
    """–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"""
    try:
        logger.info("üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        logger.info("‚úÖ –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except subprocess.CalledProcessError as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π: {e}")
        sys.exit(1)

def start_service():
    """–ó–∞–ø—É—Å–∫ ML —Å–µ—Ä–≤—ñ—Å—É"""
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Music Recommender ML Service...")
        logger.info("üåê –°–µ—Ä–≤—ñ—Å –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞ http://localhost:8000")
        logger.info("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: http://localhost:8000/docs")
        logger.info("üîÑ –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")
        
        # –ó–∞–ø—É—Å–∫ uvicorn
        subprocess.run([
            sys.executable, "-m", "uvicorn", 
            "main:app", 
            "--host", "0.0.0.0", 
            "--port", "8000", 
            "--reload"
        ])
    except KeyboardInterrupt:
        logger.info("üõë –°–µ—Ä–≤—ñ—Å –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—É: {e}")
        sys.exit(1)

if __name__ == "__main__":
    print("üéµ Music Recommender ML Service 2.0")
    print("=" * 50)
    
    check_python()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î requirements.txt
    if os.path.exists("requirements.txt"):
        install_requirements()
    else:
        logger.warning("‚ö†Ô∏è requirements.txt –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π")
    
    start_service() 