#!/usr/bin/env python3
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

BASE_URL = "https://localhost:5001"

def test_ml_recommendations():
    """–¢–µ—Å—Ç—É—î–º–æ ML —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∑ —ñ—Å–Ω—É—é—á–∏–º–∏ –¥–∞–Ω–∏–º–∏"""
    print("üéµ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç ML —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π")
    print("=" * 40)
    
    # 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ML —Å–µ—Ä–≤—ñ—Å
    try:
        response = requests.get(f"{BASE_URL}/ML/CheckMLServiceStatus", verify=False)
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ ML —Å–µ—Ä–≤—ñ—Å: {result.get('status', 'unknown')}")
        else:
            print("‚ùå ML —Å–µ—Ä–≤—ñ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π")
            return
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: {e}")
        return
    
    # 2. –¢—Ä–µ–Ω—É—î–º–æ –º–æ–¥–µ–ª—ñ
    print("\nüîÑ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –º–æ–¥–µ–ª–µ–π...")
    try:
        response = requests.post(f"{BASE_URL}/ML/TrainModels", verify=False)
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: {result.get('message', 'OK')}")
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: {e}")
    
    # 3. –¢–µ—Å—Ç—É—î–º–æ –≤—Å—ñ –∞–ª–≥–æ—Ä–∏—Ç–º–∏
    algorithms = ['content_based', 'collaborative', 'hybrid']
    
    for algorithm in algorithms:
        print(f"\nüéØ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è {algorithm}...")
        try:
            data = {
                "Algorithm": algorithm,
                "NumberOfRecommendations": 5
            }
            
            response = requests.post(
                f"{BASE_URL}/ML/GetMLRecommendations",
                json=data,
                verify=False,
                headers={'Content-Type': 'application/json'}
            )
            
            if response.status_code == 200:
                result = response.json()
                if result.get('success') and result.get('data'):
                    recommendations = result['data']['recommendations']
                    print(f"‚úÖ {algorithm}: {len(recommendations)} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π")
                    
                    # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
                    for i, rec in enumerate(recommendations[:3], 1):
                        title = rec.get('title', 'Unknown')
                        artist = rec.get('artist', 'Unknown')
                        confidence = rec.get('confidence_score', 0) * 100
                        print(f"   {i}. {title} - {artist} ({confidence:.1f}%)")
                else:
                    print(f"‚ùå {algorithm}: {result.get('message', '–ù–µ–º–∞—î —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π')}")
            else:
                print(f"‚ùå {algorithm}: HTTP {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå {algorithm}: –ü–æ–º–∏–ª–∫–∞ - {e}")

if __name__ == "__main__":
    test_ml_recommendations() 